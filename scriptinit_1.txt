#!/bin/bash
##  <thescript>
##  By: <thename>
##  Copyright (C): <theyear>
##  License: see LICENSE (GNU GPL v3)
## DESCRIPTION
##  <insert description...>
##  <...insert more description>
## PARAMETERS
##  1) firstparam=${1}     # <insert description, this is used below>
##  2) secondparam=${2}    # <insert description, this is used below>
BOLD=$(tput bold)      # get the bold text enviornment
UNDERLINE=$(tput smul) # get the underline text environment
RESET=$(tput sgr0)     # don't forget to reset afterwards!
erro(){ echo "$@" 1>&2; }
myUsage(){ erro "Usage${BOLD}${1}${RESET}: `basename ${0}` [-u for usage] <${UNDERLINE}firstparam${RESET}> <${UNDERLINE}secondparam${RESET}>"; exit 1; }
firstparam=${1}     # <insert description, this is used below>
secondparam=${2}    # <insert description, this is used below>
somevalue='<insert>'    # <insert description, this is used below>


# parse the input / pre-check
if [ -z ${1} ]
then
  erro 'ERROR 0: god is empty, just like me...'
  exit 1
elif [ ${1} = '-u' ]
then
  myUsage
elif [ ${1:0:1} = '-' ]
then
  myUsage " (option -${1:1} not recognized)"
elif [ ${#} -ne 2 ] # check that the right number of script paramters have been filled
then
  myUsage ' (incorrect number of script parameters)'
fi
if [ $firstparam != $somevalue ]
then
  firstparam="${firstparam}_${somevalue}"
fi
if ! [[ $secondparam =~ ^[0-9]+$ ]] || [ $secondparam -eq 0 ]
then
  erro 'ERROR 1111: secondparam is not a positive integer!'
  erro "secondparam = $secondparam"
  erro 'exiting...'
  exit 1
fi


# <insert code>


## FIN
